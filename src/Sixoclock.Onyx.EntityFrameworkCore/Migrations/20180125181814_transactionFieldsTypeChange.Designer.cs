// <auto-generated />
using Abp.Authorization;
using Abp.BackgroundJobs;
using Abp.Notifications;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Microsoft.EntityFrameworkCore.ValueGeneration;
using Sixoclock.Onyx.Chat;
using Sixoclock.Onyx.EntityFrameworkCore;
using Sixoclock.Onyx.Friendships;
using Sixoclock.Onyx.MultiTenancy.Payments;
using System;

namespace Sixoclock.Onyx.Migrations
{
    [DbContext(typeof(OnyxDbContext))]
    [Migration("20180125181814_transactionFieldsTypeChange")]
    partial class transactionFieldsTypeChange
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Abp.Application.Editions.Edition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.ToTable("AbpEditions");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Edition");
                });

            modelBuilder.Entity("Abp.Application.Features.FeatureSetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<int?>("TenantId");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(2000);

                    b.HasKey("Id");

                    b.ToTable("AbpFeatures");

                    b.HasDiscriminator<string>("Discriminator").HasValue("FeatureSetting");
                });

            modelBuilder.Entity("Abp.Auditing.AuditLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BrowserInfo")
                        .HasMaxLength(256);

                    b.Property<string>("ClientIpAddress")
                        .HasMaxLength(64);

                    b.Property<string>("ClientName")
                        .HasMaxLength(128);

                    b.Property<string>("CustomData")
                        .HasMaxLength(2000);

                    b.Property<string>("Exception")
                        .HasMaxLength(2000);

                    b.Property<int>("ExecutionDuration");

                    b.Property<DateTime>("ExecutionTime");

                    b.Property<int?>("ImpersonatorTenantId");

                    b.Property<long?>("ImpersonatorUserId");

                    b.Property<string>("MethodName")
                        .HasMaxLength(256);

                    b.Property<string>("Parameters")
                        .HasMaxLength(1024);

                    b.Property<string>("ServiceName")
                        .HasMaxLength(256);

                    b.Property<int?>("TenantId");

                    b.Property<long?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "ExecutionDuration");

                    b.HasIndex("TenantId", "ExecutionTime");

                    b.HasIndex("TenantId", "UserId");

                    b.ToTable("AbpAuditLogs");
                });

            modelBuilder.Entity("Abp.Authorization.PermissionSetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<bool>("IsGranted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<int?>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "Name");

                    b.ToTable("AbpPermissions");

                    b.HasDiscriminator<string>("Discriminator").HasValue("PermissionSetting");
                });

            modelBuilder.Entity("Abp.Authorization.Roles.RoleClaim", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<int>("RoleId");

                    b.Property<int?>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("TenantId", "ClaimType");

                    b.ToTable("AbpRoleClaims");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserAccount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("EmailAddress");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastLoginTime");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int?>("TenantId");

                    b.Property<long>("UserId");

                    b.Property<long?>("UserLinkId");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("EmailAddress");

                    b.HasIndex("UserName");

                    b.HasIndex("TenantId", "EmailAddress");

                    b.HasIndex("TenantId", "UserId");

                    b.HasIndex("TenantId", "UserName");

                    b.ToTable("AbpUserAccounts");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserClaim", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<int?>("TenantId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("TenantId", "ClaimType");

                    b.ToTable("AbpUserClaims");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserLogin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LoginProvider")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<int?>("TenantId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("TenantId", "UserId");

                    b.HasIndex("TenantId", "LoginProvider", "ProviderKey");

                    b.ToTable("AbpUserLogins");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserLoginAttempt", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BrowserInfo")
                        .HasMaxLength(256);

                    b.Property<string>("ClientIpAddress")
                        .HasMaxLength(64);

                    b.Property<string>("ClientName")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreationTime");

                    b.Property<byte>("Result");

                    b.Property<string>("TenancyName")
                        .HasMaxLength(64);

                    b.Property<int?>("TenantId");

                    b.Property<long?>("UserId");

                    b.Property<string>("UserNameOrEmailAddress")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("UserId", "TenantId");

                    b.HasIndex("TenancyName", "UserNameOrEmailAddress", "Result");

                    b.ToTable("AbpUserLoginAttempts");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserOrganizationUnit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("OrganizationUnitId");

                    b.Property<int?>("TenantId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "OrganizationUnitId");

                    b.HasIndex("TenantId", "UserId");

                    b.ToTable("AbpUserOrganizationUnits");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<int>("RoleId");

                    b.Property<int?>("TenantId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("TenantId", "RoleId");

                    b.HasIndex("TenantId", "UserId");

                    b.ToTable("AbpUserRoles");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserToken", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<int?>("TenantId");

                    b.Property<long>("UserId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("TenantId", "UserId");

                    b.ToTable("AbpUserTokens");
                });

            modelBuilder.Entity("Abp.BackgroundJobs.BackgroundJobInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<bool>("IsAbandoned");

                    b.Property<string>("JobArgs")
                        .IsRequired()
                        .HasMaxLength(1048576);

                    b.Property<string>("JobType")
                        .IsRequired()
                        .HasMaxLength(512);

                    b.Property<DateTime?>("LastTryTime");

                    b.Property<DateTime>("NextTryTime");

                    b.Property<byte>("Priority");

                    b.Property<short>("TryCount");

                    b.HasKey("Id");

                    b.HasIndex("IsAbandoned", "NextTryTime");

                    b.ToTable("AbpBackgroundJobs");
                });

            modelBuilder.Entity("Abp.Configuration.Setting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<int?>("TenantId");

                    b.Property<long?>("UserId");

                    b.Property<string>("Value")
                        .HasMaxLength(2000);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("TenantId", "Name");

                    b.ToTable("AbpSettings");
                });

            modelBuilder.Entity("Abp.IdentityServer4.PersistedGrantEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(200);

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000);

                    b.Property<DateTime?>("Expiration");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("SubjectId", "ClientId", "Type");

                    b.ToTable("AbpPersistedGrants");
                });

            modelBuilder.Entity("Abp.Localization.ApplicationLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("Icon")
                        .HasMaxLength(128);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsDisabled");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<int?>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "Name");

                    b.ToTable("AbpLanguages");
                });

            modelBuilder.Entity("Abp.Localization.ApplicationLanguageText", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<int?>("TenantId");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(67108864);

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "Source", "LanguageName", "Key");

                    b.ToTable("AbpLanguageTexts");
                });

            modelBuilder.Entity("Abp.Notifications.NotificationInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Data")
                        .HasMaxLength(1048576);

                    b.Property<string>("DataTypeName")
                        .HasMaxLength(512);

                    b.Property<string>("EntityId")
                        .HasMaxLength(96);

                    b.Property<string>("EntityTypeAssemblyQualifiedName")
                        .HasMaxLength(512);

                    b.Property<string>("EntityTypeName")
                        .HasMaxLength(250);

                    b.Property<string>("ExcludedUserIds")
                        .HasMaxLength(131072);

                    b.Property<string>("NotificationName")
                        .IsRequired()
                        .HasMaxLength(96);

                    b.Property<byte>("Severity");

                    b.Property<string>("TenantIds")
                        .HasMaxLength(131072);

                    b.Property<string>("UserIds")
                        .HasMaxLength(131072);

                    b.HasKey("Id");

                    b.ToTable("AbpNotifications");
                });

            modelBuilder.Entity("Abp.Notifications.NotificationSubscriptionInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("EntityId")
                        .HasMaxLength(96);

                    b.Property<string>("EntityTypeAssemblyQualifiedName")
                        .HasMaxLength(512);

                    b.Property<string>("EntityTypeName")
                        .HasMaxLength(250);

                    b.Property<string>("NotificationName")
                        .HasMaxLength(96);

                    b.Property<int?>("TenantId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("NotificationName", "EntityTypeName", "EntityId", "UserId");

                    b.HasIndex("TenantId", "NotificationName", "EntityTypeName", "EntityId", "UserId");

                    b.ToTable("AbpNotificationSubscriptions");
                });

            modelBuilder.Entity("Abp.Notifications.TenantNotificationInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("Data")
                        .HasMaxLength(1048576);

                    b.Property<string>("DataTypeName")
                        .HasMaxLength(512);

                    b.Property<string>("EntityId")
                        .HasMaxLength(96);

                    b.Property<string>("EntityTypeAssemblyQualifiedName")
                        .HasMaxLength(512);

                    b.Property<string>("EntityTypeName")
                        .HasMaxLength(250);

                    b.Property<string>("NotificationName")
                        .IsRequired()
                        .HasMaxLength(96);

                    b.Property<byte>("Severity");

                    b.Property<int?>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("AbpTenantNotifications");
                });

            modelBuilder.Entity("Abp.Notifications.UserNotificationInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<int>("State");

                    b.Property<int?>("TenantId");

                    b.Property<Guid>("TenantNotificationId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "State", "CreationTime");

                    b.ToTable("AbpUserNotifications");
                });

            modelBuilder.Entity("Abp.Organizations.OrganizationUnit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(95);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<long?>("ParentId");

                    b.Property<int?>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("TenantId", "Code");

                    b.ToTable("AbpOrganizationUnits");
                });

            modelBuilder.Entity("Sixoclock.Onyx.AdminStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Status");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("AdminStatuses");
                });

            modelBuilder.Entity("Sixoclock.Onyx.AdminStatusEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AdminStatus");

                    b.Property<int>("ChargepointId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<DateTime>("EventDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ChargepointId");

                    b.ToTable("AdminStatusEvents");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Authorization.Roles.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<bool>("IsDefault");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsStatic");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<int?>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("DeleterUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("TenantId", "NormalizedName");

                    b.ToTable("AbpRoles");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Authorization.Users.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("Address");

                    b.Property<string>("AuthenticationSource")
                        .HasMaxLength(64);

                    b.Property<int?>("BillingTypeId");

                    b.Property<string>("City");

                    b.Property<string>("Comment");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<float?>("CostMin");

                    b.Property<float?>("CostkWh");

                    b.Property<int?>("CountryId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<int?>("CurrencyId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("EmailConfirmationCode")
                        .HasMaxLength(328);

                    b.Property<string>("GoogleAuthenticatorKey");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsEmailConfirmed");

                    b.Property<bool>("IsLockoutEnabled");

                    b.Property<bool>("IsPhoneNumberConfirmed");

                    b.Property<bool>("IsTwoFactorEnabled");

                    b.Property<DateTime?>("LastLoginTime");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<DateTime?>("LockoutEndDateUtc");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<string>("NormalizedEmailAddress")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("PasswordResetCode")
                        .HasMaxLength(328);

                    b.Property<string>("PhoneNumber");

                    b.Property<Guid?>("ProfilePictureId");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("ShouldChangePasswordOnNextLogin");

                    b.Property<string>("SignInToken");

                    b.Property<DateTime?>("SignInTokenExpireTimeUtc");

                    b.Property<string>("Street");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<int?>("TenantId");

                    b.Property<int>("TotalChargeTime");

                    b.Property<int>("TotalCo2Saved");

                    b.Property<int?>("TotalSessions");

                    b.Property<float?>("TotalkWh");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<string>("Zip");

                    b.HasKey("Id");

                    b.HasIndex("BillingTypeId");

                    b.HasIndex("CountryId");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DeleterUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("TenantId", "NormalizedEmailAddress");

                    b.HasIndex("TenantId", "NormalizedUserName");

                    b.ToTable("AbpUsers");
                });

            modelBuilder.Entity("Sixoclock.Onyx.AuthorizationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("AuthorizationStatuses");
                });

            modelBuilder.Entity("Sixoclock.Onyx.AuthTagMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("LocalAuthListId");

                    b.Property<int>("TagId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("LocalAuthListId");

                    b.HasIndex("TagId");

                    b.ToTable("AuthTagMembers");
                });

            modelBuilder.Entity("Sixoclock.Onyx.AvailabilityEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AvailabilityStatusId");

                    b.Property<int>("AvailabilityTypeId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime>("Date");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<int>("EVSEId");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int?>("OcppMessageEventId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("AvailabilityStatusId");

                    b.HasIndex("AvailabilityTypeId");

                    b.HasIndex("EVSEId");

                    b.HasIndex("OcppMessageEventId");

                    b.ToTable("AvailabilityEvents");
                });

            modelBuilder.Entity("Sixoclock.Onyx.AvailabilityStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("AvailabilityStatuses");
                });

            modelBuilder.Entity("Sixoclock.Onyx.AvailabilityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("AvailabilityTypes");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BillDate");

                    b.Property<int>("BillingStatusId");

                    b.Property<int>("BillingTypeId");

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<DateTime>("DueDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Number");

                    b.Property<int>("TenantId");

                    b.Property<int>("Totalkwh");

                    b.Property<int>("Transactions");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("BillingStatusId");

                    b.HasIndex("BillingTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("Sixoclock.Onyx.BillingStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("BillingStatuses");
                });

            modelBuilder.Entity("Sixoclock.Onyx.BillingType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("BillingTypes");
                });

            modelBuilder.Entity("Sixoclock.Onyx.CancelReservationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("CancelReservationStatuses");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Capacity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("PowerId");

                    b.Property<int>("TenantId");

                    b.Property<int>("UnitId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("PowerId");

                    b.HasIndex("UnitId");

                    b.ToTable("Capacities");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Chargepoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AccChargetime");

                    b.Property<int?>("AccEnergyDelivery");

                    b.Property<int?>("AccFaulttime");

                    b.Property<int?>("AccUptime");

                    b.Property<int>("AdminStatusId");

                    b.Property<int>("ChargepointModelId");

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("FirmwareLocation");

                    b.Property<int?>("FirmwareStatusId");

                    b.Property<string>("FirmwareVersion");

                    b.Property<int>("GroupId");

                    b.Property<string>("IccId");

                    b.Property<string>("Identity");

                    b.Property<string>("Imsi");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int?>("LocalAuthListVersion");

                    b.Property<string>("MeterSerialNumber");

                    b.Property<string>("NetworkAddress");

                    b.Property<int?>("OCPPTransportId");

                    b.Property<int?>("OCPPVersionId");

                    b.Property<string>("Place");

                    b.Property<int?>("Port");

                    b.Property<int?>("RegistrationStatusId");

                    b.Property<string>("SerialNumber");

                    b.Property<string>("TempUnit");

                    b.Property<int?>("Temperature");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("AdminStatusId");

                    b.HasIndex("ChargepointModelId");

                    b.HasIndex("FirmwareStatusId");

                    b.HasIndex("GroupId");

                    b.HasIndex("OCPPTransportId");

                    b.HasIndex("OCPPVersionId");

                    b.HasIndex("RegistrationStatusId");

                    b.ToTable("Chargepoints");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ChargepointFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ChargepointId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("OCPPFeatureId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ChargepointId");

                    b.ToTable("ChargepointFeatures");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ChargepointKeyValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ChargepointId");

                    b.Property<string>("ChargepointValue");

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("FeatureName");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Key");

                    b.Property<int>("KeyValueId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("RW");

                    b.Property<int>("TenantId");

                    b.Property<string>("WildValue");

                    b.HasKey("Id");

                    b.HasIndex("ChargepointId");

                    b.ToTable("ChargepointKeyValues");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ChargepointModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("FirmwareLocation");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("ModelName");

                    b.Property<int>("MountTypeId");

                    b.Property<int>("OCPPTransportId");

                    b.Property<int>("OCPPVersionId");

                    b.Property<int>("TenantId");

                    b.Property<int>("VendorId");

                    b.HasKey("Id");

                    b.HasIndex("MountTypeId");

                    b.HasIndex("OCPPTransportId");

                    b.HasIndex("OCPPVersionId");

                    b.HasIndex("VendorId");

                    b.ToTable("ChargepointModels");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ChargepointModelImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ChargepointModelId");

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("Ext");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("OriginalFileName");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ChargepointModelId");

                    b.ToTable("ChargepointModelImages");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ChargepointService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ChargepointId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("ServiceId");

                    b.HasKey("Id");

                    b.HasIndex("ChargepointId");

                    b.HasIndex("ServiceId");

                    b.ToTable("ChargepointServices");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ChargepointServicePriceParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ChargepointServiceId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.Property<decimal>("Value");

                    b.HasKey("Id");

                    b.HasIndex("ChargepointServiceId");

                    b.ToTable("ChargepointServicePriceParameters");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ChargeReleaseOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Option");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("ChargeReleaseOptions");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Chat.ChatMessage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(4096);

                    b.Property<int>("ReadState");

                    b.Property<int>("ReceiverReadState");

                    b.Property<Guid?>("SharedMessageId");

                    b.Property<int>("Side");

                    b.Property<int?>("TargetTenantId");

                    b.Property<long>("TargetUserId");

                    b.Property<int?>("TenantId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("TargetTenantId", "TargetUserId", "ReadState");

                    b.HasIndex("TargetTenantId", "UserId", "ReadState");

                    b.HasIndex("TenantId", "TargetUserId", "ReadState");

                    b.HasIndex("TenantId", "UserId", "ReadState");

                    b.ToTable("AppChatMessages");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ClearCacheEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ChargepointId");

                    b.Property<int>("ClearCacheStatusId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime>("Date");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int?>("OcppMessageEventId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ChargepointId");

                    b.HasIndex("ClearCacheStatusId");

                    b.HasIndex("OcppMessageEventId");

                    b.ToTable("ClearCacheEvents");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ClearCacheStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("ClearCacheStatuses");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ComOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Option");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("ComOptions");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ComOptionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ChargepointModelId");

                    b.Property<int>("ComOptionId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ChargepointModelId");

                    b.HasIndex("ComOptionId");

                    b.ToTable("ComOptionModels");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ConfigEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ChargepointId");

                    b.Property<int>("ConfigStatusId");

                    b.Property<int>("ConfigTypeId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime>("Date");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int?>("OcppMessageEventId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ChargepointId");

                    b.HasIndex("ConfigStatusId");

                    b.HasIndex("ConfigTypeId");

                    b.HasIndex("OcppMessageEventId");

                    b.ToTable("ConfigEvents");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ConfigStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("ConfigStatuses");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ConfigType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("ConfigTypes");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Connector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CapacityId");

                    b.Property<string>("Comment");

                    b.Property<int>("ConnectorTypeId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<int>("EVSEId");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CapacityId");

                    b.HasIndex("ConnectorTypeId");

                    b.HasIndex("EVSEId");

                    b.ToTable("Connectors");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ConnectorStatusCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Status");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("ConnectorStatusCodes");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ConnectorType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<string>("ConnectorName");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("ConnectorTypes");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Context", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<string>("ContextName");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("Contexts");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<string>("CountryName");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address1");

                    b.Property<string>("Address2");

                    b.Property<string>("City");

                    b.Property<string>("Comment");

                    b.Property<int?>("CountryId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("CustomerName");

                    b.Property<int>("CustomerTenantId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Phone1");

                    b.Property<string>("Phone2");

                    b.Property<int>("SegmentId");

                    b.Property<int>("TenantId");

                    b.Property<string>("ZipCode");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("CustomerTenantId")
                        .IsUnique();

                    b.HasIndex("SegmentId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Sixoclock.Onyx.CustomerService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<int>("CustomerId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("ServiceId");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ServiceId");

                    b.ToTable("CustomerServices");
                });

            modelBuilder.Entity("Sixoclock.Onyx.CustomerServicePriceParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<int>("CustomerServiceId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.Property<decimal>("Value");

                    b.HasKey("Id");

                    b.HasIndex("CustomerServiceId");

                    b.ToTable("CustomerServicePriceParameters");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ElectricalOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Option");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("ElectricalOptions");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ElectricalOptionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ChargepointModelId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<int>("ElectricalOptionId");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ChargepointModelId");

                    b.HasIndex("ElectricalOptionId");

                    b.ToTable("ElectricalOptionModels");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ErrorCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("ErrorCodes");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ChargepointId");

                    b.Property<int>("ConnectorEventTypeId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<DateTime>("EventTime");

                    b.Property<int?>("EventTypesId");

                    b.Property<string>("EventValue");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ChargepointId");

                    b.HasIndex("EventTypesId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Sixoclock.Onyx.EventType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("Event");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("EventTypes");
                });

            modelBuilder.Entity("Sixoclock.Onyx.EVSE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AvailabilityTypeId");

                    b.Property<int>("ChargepointId");

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<int?>("EVSEStatusId");

                    b.Property<int>("EVSE_id");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int?>("MeterTypeId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("AvailabilityTypeId");

                    b.HasIndex("ChargepointId");

                    b.HasIndex("EVSEStatusId")
                        .IsUnique()
                        .HasFilter("[EVSEStatusId] IS NOT NULL");

                    b.HasIndex("MeterTypeId");

                    b.ToTable("EVSEs");
                });

            modelBuilder.Entity("Sixoclock.Onyx.EVSEStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<int>("EVSEStatusCodeId");

                    b.Property<int?>("ErrorCodeId");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime>("Time");

                    b.Property<int?>("VendorErrorCodeId");

                    b.HasKey("Id");

                    b.HasIndex("EVSEStatusCodeId");

                    b.HasIndex("ErrorCodeId");

                    b.HasIndex("VendorErrorCodeId");

                    b.ToTable("EVSEStatuses");
                });

            modelBuilder.Entity("Sixoclock.Onyx.FirmwareStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("FirmwareStatuses");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Format", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("FormatType");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("Formats");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Friendships.Friendship", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<Guid?>("FriendProfilePictureId");

                    b.Property<string>("FriendTenancyName");

                    b.Property<int?>("FriendTenantId");

                    b.Property<long>("FriendUserId");

                    b.Property<string>("FriendUserName")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<int>("State");

                    b.Property<int?>("TenantId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("FriendTenantId", "FriendUserId");

                    b.HasIndex("FriendTenantId", "UserId");

                    b.HasIndex("TenantId", "FriendUserId");

                    b.HasIndex("TenantId", "UserId");

                    b.ToTable("AppFriendships");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Grants.Rule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EntityName");

                    b.Property<bool>("IsParanthesisStart");

                    b.Property<int>("Order");

                    b.Property<string>("PropertyName");

                    b.Property<int>("RuleConditionId");

                    b.Property<int?>("RuleRelationId");

                    b.Property<int>("RuleSetId");

                    b.Property<int>("TenantId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("RuleConditionId");

                    b.HasIndex("RuleRelationId");

                    b.HasIndex("RuleSetId");

                    b.ToTable("Rules");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Grants.RuleRelation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<int>("TenantId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("RuleRelations");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Grants.RuleSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("TenantId");

                    b.Property<string>("Translation");

                    b.HasKey("Id");

                    b.ToTable("RuleSets");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Grants.UserRuleSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("RuleSetId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("RuleSetId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRuleSets");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address1");

                    b.Property<string>("Address2");

                    b.Property<string>("City");

                    b.Property<string>("Comment");

                    b.Property<int?>("CountryId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("GroupName");

                    b.Property<int>("InstallId");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<string>("Zip");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("InstallId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Sixoclock.Onyx.GroupService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<int>("GroupId");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("ServiceId");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("ServiceId");

                    b.ToTable("GroupServices");
                });

            modelBuilder.Entity("Sixoclock.Onyx.GroupServicePriceParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<int>("GroupServiceId");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.Property<decimal>("Value");

                    b.HasKey("Id");

                    b.HasIndex("GroupServiceId");

                    b.ToTable("GroupServicePriceParameters");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Heartbeat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ChargepointId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<DateTime>("Time");

                    b.HasKey("Id");

                    b.HasIndex("ChargepointId");

                    b.ToTable("Heartbeats");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Install", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("InstallName");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Latitude");

                    b.Property<string>("Longitude");

                    b.Property<int>("RegionId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("Installs");
                });

            modelBuilder.Entity("Sixoclock.Onyx.InstallService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<int>("InstallId");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("ServiceId");

                    b.HasKey("Id");

                    b.HasIndex("InstallId");

                    b.HasIndex("ServiceId");

                    b.ToTable("InstallServices");
                });

            modelBuilder.Entity("Sixoclock.Onyx.InstallServicePriceParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<int>("InstallServiceId");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.Property<decimal>("Value");

                    b.HasKey("Id");

                    b.HasIndex("InstallServiceId");

                    b.ToTable("InstallServicePriceParameters");
                });

            modelBuilder.Entity("Sixoclock.Onyx.KeyValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<string>("DefaultValue");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Key");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("OCPPFeatureId");

                    b.Property<string>("RW");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("OCPPFeatureId");

                    b.ToTable("KeyValues");
                });

            modelBuilder.Entity("Sixoclock.Onyx.LangDescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ChargepointModelId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LangShortnameInZero");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ChargepointModelId");

                    b.ToTable("LangDescriptions");
                });

            modelBuilder.Entity("Sixoclock.Onyx.LocalAuthList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<int>("UpdateStatusId");

                    b.Property<int>("UpdateTypeId");

                    b.HasKey("Id");

                    b.HasIndex("UpdateStatusId");

                    b.HasIndex("UpdateTypeId");

                    b.ToTable("LocalAuthLists");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("LocationName");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Market", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<int>("CustomerId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("MarketName");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Markets");
                });

            modelBuilder.Entity("Sixoclock.Onyx.MarketService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("MarketId");

                    b.Property<int>("ServiceId");

                    b.HasKey("Id");

                    b.HasIndex("MarketId");

                    b.HasIndex("ServiceId");

                    b.ToTable("MarketServices");
                });

            modelBuilder.Entity("Sixoclock.Onyx.MarketServicePriceParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("MarketServiceId");

                    b.Property<string>("Name");

                    b.Property<decimal>("Value");

                    b.HasKey("Id");

                    b.HasIndex("MarketServiceId");

                    b.ToTable("MarketServicePriceParameters");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Measurand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("MeasurandType");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("Measurands");
                });

            modelBuilder.Entity("Sixoclock.Onyx.MeterType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("MeterTypes");
                });

            modelBuilder.Entity("Sixoclock.Onyx.MeterValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ContextId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<int?>("FormatId");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int?>("LocationId");

                    b.Property<int?>("MeasurandId");

                    b.Property<DateTime>("MeterTime");

                    b.Property<int>("MeterValueTypeId");

                    b.Property<int?>("PhaseId");

                    b.Property<int>("TenantId");

                    b.Property<int>("TransactionId");

                    b.Property<int?>("UnitId");

                    b.Property<float>("Value");

                    b.HasKey("Id");

                    b.HasIndex("ContextId");

                    b.HasIndex("FormatId");

                    b.HasIndex("LocationId");

                    b.HasIndex("MeasurandId");

                    b.HasIndex("MeterValueTypeId");

                    b.HasIndex("PhaseId");

                    b.HasIndex("TransactionId");

                    b.HasIndex("UnitId");

                    b.ToTable("MeterValues");
                });

            modelBuilder.Entity("Sixoclock.Onyx.MeterValueType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("MeterValueTypes");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ModelConnector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CapacityId");

                    b.Property<string>("Comment");

                    b.Property<int>("ConnectorId");

                    b.Property<int>("ConnectorTypeId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("ModelEVSEId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CapacityId");

                    b.HasIndex("ConnectorTypeId");

                    b.HasIndex("ModelEVSEId");

                    b.ToTable("ModelConnectors");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ModelEVSE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ChargepointModelId");

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<int>("EVSEId");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int?>("MeterTypeId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ChargepointModelId");

                    b.HasIndex("MeterTypeId");

                    b.ToTable("ModelEVSEs");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ModelFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ChargepointModelId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("OCPPFeatureId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ChargepointModelId");

                    b.ToTable("ModelFeatures");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ModelKeyValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ChargepointModelId");

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("FeatureName");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Key");

                    b.Property<int>("KeyValueId");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("ModelValue");

                    b.Property<string>("RW");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ChargepointModelId");

                    b.ToTable("ModelKeyValues");
                });

            modelBuilder.Entity("Sixoclock.Onyx.MountType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("MountTypes");
                });

            modelBuilder.Entity("Sixoclock.Onyx.MultiTenancy.Accounting.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("InvoiceDate");

                    b.Property<string>("InvoiceNo");

                    b.Property<string>("TenantAddress");

                    b.Property<string>("TenantLegalName");

                    b.Property<string>("TenantTaxNo");

                    b.HasKey("Id");

                    b.ToTable("AppInvoices");
                });

            modelBuilder.Entity("Sixoclock.Onyx.MultiTenancy.Payments.SubscriptionPayment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<int>("DayCount");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<int>("EditionId");

                    b.Property<int>("Gateway");

                    b.Property<string>("InvoiceNo");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("PaymentId");

                    b.Property<int?>("PaymentPeriodType");

                    b.Property<int>("Status");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("EditionId");

                    b.HasIndex("PaymentId", "Gateway");

                    b.HasIndex("Status", "CreationTime");

                    b.ToTable("AppSubscriptionPayments");
                });

            modelBuilder.Entity("Sixoclock.Onyx.MultiTenancy.Tenant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConnectionString")
                        .HasMaxLength(1024);

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<Guid?>("CustomCssId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<int?>("EditionId");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsInTrialPeriod");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("LogoFileType")
                        .HasMaxLength(64);

                    b.Property<Guid?>("LogoId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<DateTime?>("SubscriptionEndDateUtc");

                    b.Property<string>("TenancyName")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.HasIndex("CreationTime");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("DeleterUserId");

                    b.HasIndex("EditionId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("SubscriptionEndDateUtc");

                    b.HasIndex("TenancyName");

                    b.ToTable("AbpTenants");
                });

            modelBuilder.Entity("Sixoclock.Onyx.OCPPFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("FeatureName");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("OCPPVersionId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("OCPPVersionId");

                    b.ToTable("OCPPFeatures");
                });

            modelBuilder.Entity("Sixoclock.Onyx.OCPPMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Message");

                    b.Property<int>("OCPPVersionId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("OCPPVersionId");

                    b.ToTable("OCPPMessages");
                });

            modelBuilder.Entity("Sixoclock.Onyx.OCPPMessageEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ChargepointId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("OCPPStatusId");

                    b.Property<string>("Request");

                    b.Property<string>("Response");

                    b.Property<int>("TenantId");

                    b.Property<string>("UniqueId");

                    b.HasKey("Id");

                    b.HasIndex("ChargepointId");

                    b.HasIndex("OCPPStatusId");

                    b.ToTable("OCPPMessageEvents");
                });

            modelBuilder.Entity("Sixoclock.Onyx.OCPPStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Status");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("OCPPStatuses");
                });

            modelBuilder.Entity("Sixoclock.Onyx.OCPPTransport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("OCPPTransportName");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("OCPPTransports");
                });

            modelBuilder.Entity("Sixoclock.Onyx.OCPPVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<string>("VersionName");

                    b.HasKey("Id");

                    b.ToTable("OCPPVersions");
                });

            modelBuilder.Entity("Sixoclock.Onyx.OtherOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Option");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("OtherOptions");
                });

            modelBuilder.Entity("Sixoclock.Onyx.OtherOptionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ChargepointModelId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("OtherOptionId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ChargepointModelId");

                    b.HasIndex("OtherOptionId");

                    b.ToTable("OtherOptionModels");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ParentTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("ParentTag");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Phase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("PhaseName");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("Phases");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Power", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("PowerName");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("Powers");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Reason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("ReasonName");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("Reasons");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("MarketId");

                    b.Property<string>("RegionName");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("MarketId");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("Sixoclock.Onyx.RegionService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("RegionId");

                    b.Property<int>("ServiceId");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.HasIndex("ServiceId");

                    b.ToTable("RegionServices");
                });

            modelBuilder.Entity("Sixoclock.Onyx.RegionServicePriceParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.Property<int>("RegionServiceId");

                    b.Property<decimal>("Value");

                    b.HasKey("Id");

                    b.HasIndex("RegionServiceId");

                    b.ToTable("RegionServicePriceParameters");
                });

            modelBuilder.Entity("Sixoclock.Onyx.RegistrationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("RegistrationStatuses");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ReleaseOptionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ChargeReleaseOptionId");

                    b.Property<int>("ChargepointModelId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ChargeReleaseOptionId");

                    b.HasIndex("ChargepointModelId");

                    b.ToTable("ReleaseOptionModels");
                });

            modelBuilder.Entity("Sixoclock.Onyx.RemoteStartStopEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<int>("EVSEId");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int?>("OcppMessageEventId");

                    b.Property<int>("RemoteStartStopEventTypeId");

                    b.Property<int>("RemoteStartStopStatusId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("EVSEId");

                    b.HasIndex("OcppMessageEventId");

                    b.HasIndex("RemoteStartStopEventTypeId");

                    b.HasIndex("RemoteStartStopStatusId");

                    b.ToTable("RemoteStartStopEvents");
                });

            modelBuilder.Entity("Sixoclock.Onyx.RemoteStartStopEventType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("EventType");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("RemoteStartStopEventTypes");
                });

            modelBuilder.Entity("Sixoclock.Onyx.RemoteStartStopStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("RemoteStartStopStatuses");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CancelReservationStatusId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<int>("EVSEId");

                    b.Property<DateTime>("ExpiryDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("ReservationStatusId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CancelReservationStatusId");

                    b.HasIndex("EVSEId");

                    b.HasIndex("ReservationStatusId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ReservationEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<DateTime>("EventTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("ReservationEventTypeId");

                    b.Property<int>("ReservationId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ReservationEventTypeId");

                    b.HasIndex("ReservationId");

                    b.ToTable("ReservationEvents");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ReservationEventType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("Eventtype");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("ReservationEventTypes");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ReservationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("ReservationStatuses");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ResetEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ChargepointId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime>("Date");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int?>("OcppMessageEventId");

                    b.Property<int>("ResetStatusId");

                    b.Property<int>("ResetTypeId");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ChargepointId");

                    b.HasIndex("OcppMessageEventId");

                    b.HasIndex("ResetStatusId");

                    b.HasIndex("ResetTypeId");

                    b.ToTable("ResetEvents");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ResetStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("ResetStatusValue");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("ResetStatuses");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ResetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("ResetTypes");
                });

            modelBuilder.Entity("Sixoclock.Onyx.RuleCondition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<int>("TenantId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("RuleConditions");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Segment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("Segments");
                });

            modelBuilder.Entity("Sixoclock.Onyx.SegmentService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("SegmentId");

                    b.Property<int>("ServiceId");

                    b.HasKey("Id");

                    b.HasIndex("SegmentId");

                    b.HasIndex("ServiceId");

                    b.ToTable("SegmentServices");
                });

            modelBuilder.Entity("Sixoclock.Onyx.SegmentServicePriceParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.Property<int>("SegmentServiceId");

                    b.Property<decimal>("Value");

                    b.HasKey("Id");

                    b.HasIndex("SegmentServiceId");

                    b.ToTable("SegmentServicePriceParameters");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<string>("Description");

                    b.Property<string>("FeatureName");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ServicePriceParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.Property<int>("ServiceId");

                    b.Property<decimal>("Value");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.ToTable("ServicePriceParameters");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Storage.BinaryObject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("Bytes")
                        .IsRequired();

                    b.Property<int?>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("AppBinaryObjects");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AuthorizationStatusId");

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<DateTime?>("Expiry");

                    b.Property<string>("IdToken");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("ParentTagId");

                    b.Property<bool?>("ServiceContact");

                    b.Property<int?>("TagStatusId");

                    b.Property<int>("TenantId");

                    b.Property<long?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("AuthorizationStatusId");

                    b.HasIndex("ParentTagId");

                    b.HasIndex("TagStatusId");

                    b.HasIndex("UserId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Sixoclock.Onyx.TagStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Status");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("TagStatuses");
                });

            modelBuilder.Entity("Sixoclock.Onyx.TagTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TagId");

                    b.Property<DateTime>("TagTransactioTime");

                    b.Property<int>("TagTransactionTypeId");

                    b.Property<int>("TenantId");

                    b.Property<int>("TransactionId");

                    b.HasKey("Id");

                    b.HasIndex("TagId");

                    b.HasIndex("TagTransactionTypeId");

                    b.HasIndex("TransactionId");

                    b.ToTable("TagTransactions");
                });

            modelBuilder.Entity("Sixoclock.Onyx.TagTransactionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("TagTransactionType");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CO2Saved");

                    b.Property<string>("Comment");

                    b.Property<float?>("Cost");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<int?>("CurrencyId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<DateTime?>("Duration");

                    b.Property<int>("EVSEId");

                    b.Property<float?>("Earned");

                    b.Property<bool>("IsDeleted");

                    b.Property<float>("KwhDelivered");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int?>("ReasonId");

                    b.Property<int>("TenantId");

                    b.Property<float?>("ToBilled");

                    b.Property<DateTime?>("TransactionStartTime");

                    b.Property<int>("TransactionStatusId");

                    b.Property<DateTime?>("TransactionStopTime");

                    b.Property<int?>("TransactionTypeId");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("EVSEId");

                    b.HasIndex("ReasonId");

                    b.HasIndex("TransactionStatusId");

                    b.HasIndex("TransactionTypeId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Sixoclock.Onyx.TransactionStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("TransactionStatuses");
                });

            modelBuilder.Entity("Sixoclock.Onyx.TransactionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("TransactionTypes");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<string>("UnitName");

                    b.HasKey("Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("Sixoclock.Onyx.UnlockEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<DateTime>("Date");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<int>("EVSEId");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int?>("OcppMessageEventId");

                    b.Property<int>("TenantId");

                    b.Property<int?>("UnlockStatusId");

                    b.HasKey("Id");

                    b.HasIndex("EVSEId");

                    b.HasIndex("OcppMessageEventId");

                    b.HasIndex("UnlockStatusId");

                    b.ToTable("UnlockEvents");
                });

            modelBuilder.Entity("Sixoclock.Onyx.UnlockStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("UnlockStatuses");
                });

            modelBuilder.Entity("Sixoclock.Onyx.UpdateStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("UpdateStatuses");
                });

            modelBuilder.Entity("Sixoclock.Onyx.UpdateType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("UpdateTypes");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Vendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<string>("Name");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("Sixoclock.Onyx.VendorErrorCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<int>("ErrorCode");

                    b.Property<string>("ErrorText");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int>("TenantId");

                    b.Property<int>("VendorId");

                    b.HasKey("Id");

                    b.HasIndex("VendorId");

                    b.ToTable("VendorErrorCodes");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Editions.SubscribableEdition", b =>
                {
                    b.HasBaseType("Abp.Application.Editions.Edition");

                    b.Property<decimal?>("AnnualPrice");

                    b.Property<int?>("ExpiringEditionId");

                    b.Property<decimal?>("MonthlyPrice");

                    b.Property<int?>("TrialDayCount");

                    b.Property<int?>("WaitingDayAfterExpire");

                    b.ToTable("AbpEditions");

                    b.HasDiscriminator().HasValue("SubscribableEdition");
                });

            modelBuilder.Entity("Abp.Application.Features.EditionFeatureSetting", b =>
                {
                    b.HasBaseType("Abp.Application.Features.FeatureSetting");

                    b.Property<int>("EditionId");

                    b.HasIndex("EditionId", "Name");

                    b.ToTable("AbpFeatures");

                    b.HasDiscriminator().HasValue("EditionFeatureSetting");
                });

            modelBuilder.Entity("Abp.MultiTenancy.TenantFeatureSetting", b =>
                {
                    b.HasBaseType("Abp.Application.Features.FeatureSetting");


                    b.HasIndex("TenantId", "Name");

                    b.ToTable("AbpFeatures");

                    b.HasDiscriminator().HasValue("TenantFeatureSetting");
                });

            modelBuilder.Entity("Abp.Authorization.Roles.RolePermissionSetting", b =>
                {
                    b.HasBaseType("Abp.Authorization.PermissionSetting");

                    b.Property<int>("RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AbpPermissions");

                    b.HasDiscriminator().HasValue("RolePermissionSetting");
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserPermissionSetting", b =>
                {
                    b.HasBaseType("Abp.Authorization.PermissionSetting");

                    b.Property<long>("UserId");

                    b.HasIndex("UserId");

                    b.ToTable("AbpPermissions");

                    b.HasDiscriminator().HasValue("UserPermissionSetting");
                });

            modelBuilder.Entity("Abp.Authorization.Roles.RoleClaim", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Authorization.Roles.Role")
                        .WithMany("Claims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserClaim", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Authorization.Users.User")
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserLogin", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Authorization.Users.User")
                        .WithMany("Logins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserRole", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Authorization.Users.User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserToken", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Authorization.Users.User")
                        .WithMany("Tokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Abp.Configuration.Setting", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Authorization.Users.User")
                        .WithMany("Settings")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Abp.Organizations.OrganizationUnit", b =>
                {
                    b.HasOne("Abp.Organizations.OrganizationUnit", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("Sixoclock.Onyx.AdminStatusEvent", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Chargepoint", "Chargepoint")
                        .WithMany("AdminStatusEvents")
                        .HasForeignKey("ChargepointId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.Authorization.Roles.Role", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Authorization.Users.User", "CreatorUser")
                        .WithMany()
                        .HasForeignKey("CreatorUserId");

                    b.HasOne("Sixoclock.Onyx.Authorization.Users.User", "DeleterUser")
                        .WithMany()
                        .HasForeignKey("DeleterUserId");

                    b.HasOne("Sixoclock.Onyx.Authorization.Users.User", "LastModifierUser")
                        .WithMany()
                        .HasForeignKey("LastModifierUserId");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Authorization.Users.User", b =>
                {
                    b.HasOne("Sixoclock.Onyx.BillingType", "BillingType")
                        .WithMany("Users")
                        .HasForeignKey("BillingTypeId");

                    b.HasOne("Sixoclock.Onyx.Country", "Country")
                        .WithMany("Users")
                        .HasForeignKey("CountryId");

                    b.HasOne("Sixoclock.Onyx.Authorization.Users.User", "CreatorUser")
                        .WithMany()
                        .HasForeignKey("CreatorUserId");

                    b.HasOne("Sixoclock.Onyx.Currency", "Currency")
                        .WithMany("Users")
                        .HasForeignKey("CurrencyId");

                    b.HasOne("Sixoclock.Onyx.Authorization.Users.User", "DeleterUser")
                        .WithMany()
                        .HasForeignKey("DeleterUserId");

                    b.HasOne("Sixoclock.Onyx.Authorization.Users.User", "LastModifierUser")
                        .WithMany()
                        .HasForeignKey("LastModifierUserId");
                });

            modelBuilder.Entity("Sixoclock.Onyx.AuthTagMember", b =>
                {
                    b.HasOne("Sixoclock.Onyx.LocalAuthList", "LocalAuthList")
                        .WithMany("AuthTagMembers")
                        .HasForeignKey("LocalAuthListId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.Tag", "Tag")
                        .WithMany("AuthTagMembers")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.AvailabilityEvent", b =>
                {
                    b.HasOne("Sixoclock.Onyx.AvailabilityStatus", "AvailabilityStatus")
                        .WithMany("AvailabilityEvents")
                        .HasForeignKey("AvailabilityStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.AvailabilityType", "AvailabilityType")
                        .WithMany("AvailabilityEvents")
                        .HasForeignKey("AvailabilityTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.EVSE", "EVSE")
                        .WithMany()
                        .HasForeignKey("EVSEId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.OCPPMessageEvent", "OcppMessageEvent")
                        .WithMany()
                        .HasForeignKey("OcppMessageEventId");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Bill", b =>
                {
                    b.HasOne("Sixoclock.Onyx.BillingStatus", "BillingStatus")
                        .WithMany("Bills")
                        .HasForeignKey("BillingStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.BillingType", "BillingType")
                        .WithMany("Bills")
                        .HasForeignKey("BillingTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.Authorization.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.Capacity", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Power", "Power")
                        .WithMany("Capacities")
                        .HasForeignKey("PowerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.Unit", "Unit")
                        .WithMany("Capacities")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.Chargepoint", b =>
                {
                    b.HasOne("Sixoclock.Onyx.AdminStatus", "AdminStatus")
                        .WithMany("Chargepoints")
                        .HasForeignKey("AdminStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.ChargepointModel", "ChargepointModel")
                        .WithMany("Chargepoints")
                        .HasForeignKey("ChargepointModelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.FirmwareStatus", "FirmwareStatus")
                        .WithMany("Connectors")
                        .HasForeignKey("FirmwareStatusId");

                    b.HasOne("Sixoclock.Onyx.Group", "Group")
                        .WithMany("Chargepoints")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.OCPPTransport", "OCPPTransport")
                        .WithMany("Chargepoints")
                        .HasForeignKey("OCPPTransportId");

                    b.HasOne("Sixoclock.Onyx.OCPPVersion", "OCPPVersion")
                        .WithMany("Chargepoints")
                        .HasForeignKey("OCPPVersionId");

                    b.HasOne("Sixoclock.Onyx.RegistrationStatus", "RegistrationStatus")
                        .WithMany("Connectors")
                        .HasForeignKey("RegistrationStatusId");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ChargepointFeature", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Chargepoint", "Chargepoint")
                        .WithMany("ConnectorFeatures")
                        .HasForeignKey("ChargepointId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.ChargepointKeyValue", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Chargepoint", "Chargepoint")
                        .WithMany("ConnectorKeyValues")
                        .HasForeignKey("ChargepointId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.ChargepointModel", b =>
                {
                    b.HasOne("Sixoclock.Onyx.MountType", "MountType")
                        .WithMany("ChargepointModels")
                        .HasForeignKey("MountTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.OCPPTransport", "OCPPTransport")
                        .WithMany("ChargepointModels")
                        .HasForeignKey("OCPPTransportId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.OCPPVersion", "OCPPVersion")
                        .WithMany("ChargepointModels")
                        .HasForeignKey("OCPPVersionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.Vendor", "Vendor")
                        .WithMany("ChargepointModels")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.ChargepointModelImage", b =>
                {
                    b.HasOne("Sixoclock.Onyx.ChargepointModel", "ChargepointModel")
                        .WithMany("ChargepointModelImages")
                        .HasForeignKey("ChargepointModelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.ChargepointService", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Chargepoint", "Chargepoint")
                        .WithMany()
                        .HasForeignKey("ChargepointId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.ChargepointServicePriceParameter", b =>
                {
                    b.HasOne("Sixoclock.Onyx.ChargepointService", "ChargepointService")
                        .WithMany("ChargepointServicePriceParameters")
                        .HasForeignKey("ChargepointServiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.ClearCacheEvent", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Chargepoint", "Connector")
                        .WithMany()
                        .HasForeignKey("ChargepointId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.ClearCacheStatus", "ClearCacheStatus")
                        .WithMany("ClearCacheEvents")
                        .HasForeignKey("ClearCacheStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.OCPPMessageEvent", "OcppMessageEvent")
                        .WithMany()
                        .HasForeignKey("OcppMessageEventId");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ComOptionModel", b =>
                {
                    b.HasOne("Sixoclock.Onyx.ChargepointModel", "ChargepointModel")
                        .WithMany("ComOptionModels")
                        .HasForeignKey("ChargepointModelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.ComOption", "ComOption")
                        .WithMany("ComOptionModels")
                        .HasForeignKey("ComOptionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.ConfigEvent", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Chargepoint", "Chargepoint")
                        .WithMany()
                        .HasForeignKey("ChargepointId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.ConfigStatus", "ConfigStatus")
                        .WithMany("ConfigEvents")
                        .HasForeignKey("ConfigStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.ConfigType", "ConfigType")
                        .WithMany("ConfigEvents")
                        .HasForeignKey("ConfigTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.OCPPMessageEvent", "OcppMessageEvent")
                        .WithMany()
                        .HasForeignKey("OcppMessageEventId");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Connector", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Capacity", "Capacity")
                        .WithMany("Connectors")
                        .HasForeignKey("CapacityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.ConnectorType", "ConnectorType")
                        .WithMany("Connectors")
                        .HasForeignKey("ConnectorTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.EVSE", "EVSE")
                        .WithMany("Connectors")
                        .HasForeignKey("EVSEId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.Customer", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Country", "Country")
                        .WithMany("Customers")
                        .HasForeignKey("CountryId");

                    b.HasOne("Sixoclock.Onyx.MultiTenancy.Tenant", "CustomerTenant")
                        .WithOne("Customer")
                        .HasForeignKey("Sixoclock.Onyx.Customer", "CustomerTenantId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.Segment", "Segment")
                        .WithMany("Clients")
                        .HasForeignKey("SegmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.CustomerService", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.CustomerServicePriceParameter", b =>
                {
                    b.HasOne("Sixoclock.Onyx.CustomerService", "CustomerService")
                        .WithMany("CustomerServicePriceParameters")
                        .HasForeignKey("CustomerServiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.ElectricalOptionModel", b =>
                {
                    b.HasOne("Sixoclock.Onyx.ChargepointModel", "ChargepointModel")
                        .WithMany("ElectricalOptionModels")
                        .HasForeignKey("ChargepointModelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.ElectricalOption", "ElectricalOption")
                        .WithMany("ElectricalOptionModels")
                        .HasForeignKey("ElectricalOptionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.Event", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Chargepoint", "Connector")
                        .WithMany("Events")
                        .HasForeignKey("ChargepointId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.EventType", "EventTypes")
                        .WithMany("Events")
                        .HasForeignKey("EventTypesId");
                });

            modelBuilder.Entity("Sixoclock.Onyx.EVSE", b =>
                {
                    b.HasOne("Sixoclock.Onyx.AvailabilityType", "AvailabilityType")
                        .WithMany("EVSEs")
                        .HasForeignKey("AvailabilityTypeId");

                    b.HasOne("Sixoclock.Onyx.Chargepoint", "Chargepoint")
                        .WithMany("EVSEs")
                        .HasForeignKey("ChargepointId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.EVSEStatus", "EVSEStatus")
                        .WithOne("EVSE")
                        .HasForeignKey("Sixoclock.Onyx.EVSE", "EVSEStatusId");

                    b.HasOne("Sixoclock.Onyx.MeterType", "MeterType")
                        .WithMany("EVSEs")
                        .HasForeignKey("MeterTypeId");
                });

            modelBuilder.Entity("Sixoclock.Onyx.EVSEStatus", b =>
                {
                    b.HasOne("Sixoclock.Onyx.ConnectorStatusCode", "EVSEStatusCode")
                        .WithMany("EVSEStatuses")
                        .HasForeignKey("EVSEStatusCodeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.ErrorCode", "ErrorCode")
                        .WithMany("EVSEStatuses")
                        .HasForeignKey("ErrorCodeId");

                    b.HasOne("Sixoclock.Onyx.VendorErrorCode", "VendorErrorCode")
                        .WithMany("EvseStatuses")
                        .HasForeignKey("VendorErrorCodeId");
                });

            modelBuilder.Entity("Sixoclock.Onyx.Grants.Rule", b =>
                {
                    b.HasOne("Sixoclock.Onyx.RuleCondition", "RuleCondition")
                        .WithMany()
                        .HasForeignKey("RuleConditionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.Grants.RuleRelation", "RuleRelation")
                        .WithMany()
                        .HasForeignKey("RuleRelationId");

                    b.HasOne("Sixoclock.Onyx.Grants.RuleSet", "RuleSet")
                        .WithMany("Rules")
                        .HasForeignKey("RuleSetId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.Grants.UserRuleSet", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Grants.RuleSet", "RuleSet")
                        .WithMany("UserRuleSets")
                        .HasForeignKey("RuleSetId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.Authorization.Users.User", "User")
                        .WithMany("UserRuleSets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.Group", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Country", "Country")
                        .WithMany("Groups")
                        .HasForeignKey("CountryId");

                    b.HasOne("Sixoclock.Onyx.Install", "Install")
                        .WithMany("Groups")
                        .HasForeignKey("InstallId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.GroupService", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.GroupServicePriceParameter", b =>
                {
                    b.HasOne("Sixoclock.Onyx.GroupService", "GroupService")
                        .WithMany("GroupServicePriceParameters")
                        .HasForeignKey("GroupServiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.Heartbeat", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Chargepoint", "Connector")
                        .WithMany("Heartbeats")
                        .HasForeignKey("ChargepointId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.Install", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Region", "Region")
                        .WithMany("Installations")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.InstallService", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Install", "Install")
                        .WithMany()
                        .HasForeignKey("InstallId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.InstallServicePriceParameter", b =>
                {
                    b.HasOne("Sixoclock.Onyx.InstallService", "InstallService")
                        .WithMany("InstallServicePriceParameters")
                        .HasForeignKey("InstallServiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.KeyValue", b =>
                {
                    b.HasOne("Sixoclock.Onyx.OCPPFeature", "OCPPFeature")
                        .WithMany("KeyValues")
                        .HasForeignKey("OCPPFeatureId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.LangDescription", b =>
                {
                    b.HasOne("Sixoclock.Onyx.ChargepointModel", "ChargepointModel")
                        .WithMany("LangDescriptions")
                        .HasForeignKey("ChargepointModelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.LocalAuthList", b =>
                {
                    b.HasOne("Sixoclock.Onyx.UpdateStatus", "UpdateStatus")
                        .WithMany("LocalAuthLists")
                        .HasForeignKey("UpdateStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.UpdateType", "UpdateType")
                        .WithMany("LocalAuthLists")
                        .HasForeignKey("UpdateTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.Market", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Customer", "Customer")
                        .WithMany("Markets")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.MarketService", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Market", "Segment")
                        .WithMany()
                        .HasForeignKey("MarketId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.MarketServicePriceParameter", b =>
                {
                    b.HasOne("Sixoclock.Onyx.MarketService", "MarketService")
                        .WithMany("MarketServicePriceParameters")
                        .HasForeignKey("MarketServiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.MeterValue", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Context", "Context")
                        .WithMany("MeterValues")
                        .HasForeignKey("ContextId");

                    b.HasOne("Sixoclock.Onyx.Format", "Format")
                        .WithMany("MeterValues")
                        .HasForeignKey("FormatId");

                    b.HasOne("Sixoclock.Onyx.Location", "Location")
                        .WithMany("MeterValues")
                        .HasForeignKey("LocationId");

                    b.HasOne("Sixoclock.Onyx.Measurand", "Measurand")
                        .WithMany("MeterValues")
                        .HasForeignKey("MeasurandId");

                    b.HasOne("Sixoclock.Onyx.MeterValueType", "MeterValueType")
                        .WithMany("MeterValues")
                        .HasForeignKey("MeterValueTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.Phase", "Phase")
                        .WithMany("MeterValues")
                        .HasForeignKey("PhaseId");

                    b.HasOne("Sixoclock.Onyx.Transaction", "Transaction")
                        .WithMany("MeterValues")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ModelConnector", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Capacity", "Capacity")
                        .WithMany("ModelConnectors")
                        .HasForeignKey("CapacityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.ConnectorType", "ConnectorType")
                        .WithMany("ModelConnectors")
                        .HasForeignKey("ConnectorTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.ModelEVSE", "ModelEVSE")
                        .WithMany("ModelConnectors")
                        .HasForeignKey("ModelEVSEId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.ModelEVSE", b =>
                {
                    b.HasOne("Sixoclock.Onyx.ChargepointModel", "ChargepointModel")
                        .WithMany("ModelEVSEs")
                        .HasForeignKey("ChargepointModelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.MeterType", "MeterType")
                        .WithMany("ModelEVSEs")
                        .HasForeignKey("MeterTypeId");
                });

            modelBuilder.Entity("Sixoclock.Onyx.ModelFeature", b =>
                {
                    b.HasOne("Sixoclock.Onyx.ChargepointModel", "ChargepointModel")
                        .WithMany("ModelFeatures")
                        .HasForeignKey("ChargepointModelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.ModelKeyValue", b =>
                {
                    b.HasOne("Sixoclock.Onyx.ChargepointModel", "ChargepointModel")
                        .WithMany("ModelKeyValues")
                        .HasForeignKey("ChargepointModelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.MultiTenancy.Payments.SubscriptionPayment", b =>
                {
                    b.HasOne("Abp.Application.Editions.Edition", "Edition")
                        .WithMany()
                        .HasForeignKey("EditionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.MultiTenancy.Tenant", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Authorization.Users.User", "CreatorUser")
                        .WithMany()
                        .HasForeignKey("CreatorUserId");

                    b.HasOne("Sixoclock.Onyx.Authorization.Users.User", "DeleterUser")
                        .WithMany()
                        .HasForeignKey("DeleterUserId");

                    b.HasOne("Abp.Application.Editions.Edition", "Edition")
                        .WithMany()
                        .HasForeignKey("EditionId");

                    b.HasOne("Sixoclock.Onyx.Authorization.Users.User", "LastModifierUser")
                        .WithMany()
                        .HasForeignKey("LastModifierUserId");
                });

            modelBuilder.Entity("Sixoclock.Onyx.OCPPFeature", b =>
                {
                    b.HasOne("Sixoclock.Onyx.OCPPVersion", "OCPPVersion")
                        .WithMany("OCPPFeatures")
                        .HasForeignKey("OCPPVersionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.OCPPMessage", b =>
                {
                    b.HasOne("Sixoclock.Onyx.OCPPVersion", "OCPPVersion")
                        .WithMany("OCPPMessages")
                        .HasForeignKey("OCPPVersionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.OCPPMessageEvent", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Chargepoint", "Connector")
                        .WithMany("OCPPMessageEvents")
                        .HasForeignKey("ChargepointId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.OCPPStatus", "OCPPStatus")
                        .WithMany("OCPPMessageEvents")
                        .HasForeignKey("OCPPStatusId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.OtherOptionModel", b =>
                {
                    b.HasOne("Sixoclock.Onyx.ChargepointModel", "ChargepointModel")
                        .WithMany()
                        .HasForeignKey("ChargepointModelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.OtherOption", "OtherOption")
                        .WithMany("OtherOptionModels")
                        .HasForeignKey("OtherOptionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.Region", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Market", "Market")
                        .WithMany("Regions")
                        .HasForeignKey("MarketId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.RegionService", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.RegionServicePriceParameter", b =>
                {
                    b.HasOne("Sixoclock.Onyx.RegionService", "RegionService")
                        .WithMany("RegionServicePriceParameters")
                        .HasForeignKey("RegionServiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.ReleaseOptionModel", b =>
                {
                    b.HasOne("Sixoclock.Onyx.ChargeReleaseOption", "ChargeReleaseOption")
                        .WithMany("ReleaseOptionModels")
                        .HasForeignKey("ChargeReleaseOptionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.ChargepointModel", "ChargepointModel")
                        .WithMany("ReleaseOptionModels")
                        .HasForeignKey("ChargepointModelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.RemoteStartStopEvent", b =>
                {
                    b.HasOne("Sixoclock.Onyx.EVSE", "EVSE")
                        .WithMany("RemoteStartStopEvents")
                        .HasForeignKey("EVSEId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.OCPPMessageEvent", "OcppMessageEvent")
                        .WithMany()
                        .HasForeignKey("OcppMessageEventId");

                    b.HasOne("Sixoclock.Onyx.RemoteStartStopEventType", "RemoteStartStopEventType")
                        .WithMany("RemoteStartStopEvents")
                        .HasForeignKey("RemoteStartStopEventTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.RemoteStartStopStatus", "RemoteStartStopStatus")
                        .WithMany("RemoteStartStopEvents")
                        .HasForeignKey("RemoteStartStopStatusId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.Reservation", b =>
                {
                    b.HasOne("Sixoclock.Onyx.CancelReservationStatus", "CancelReservationStatus")
                        .WithMany("Reservations")
                        .HasForeignKey("CancelReservationStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.EVSE", "EVSE")
                        .WithMany("Reservations")
                        .HasForeignKey("EVSEId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.ReservationStatus", "ReservationStatus")
                        .WithMany("Reservations")
                        .HasForeignKey("ReservationStatusId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.ReservationEvent", b =>
                {
                    b.HasOne("Sixoclock.Onyx.ReservationEventType", "ReservationEventType")
                        .WithMany("ReservationEvents")
                        .HasForeignKey("ReservationEventTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.Reservation", "Reservation")
                        .WithMany()
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.ResetEvent", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Chargepoint", "Connector")
                        .WithMany("ResetEvents")
                        .HasForeignKey("ChargepointId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.OCPPMessageEvent", "OcppMessageEvent")
                        .WithMany()
                        .HasForeignKey("OcppMessageEventId");

                    b.HasOne("Sixoclock.Onyx.ResetStatus", "ResetStatus")
                        .WithMany("ResetEvents")
                        .HasForeignKey("ResetStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.ResetType", "ResetType")
                        .WithMany("ResetEvents")
                        .HasForeignKey("ResetTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.SegmentService", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Segment", "Segment")
                        .WithMany("SegmentServices")
                        .HasForeignKey("SegmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.Service", "Service")
                        .WithMany("SegmentServices")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.SegmentServicePriceParameter", b =>
                {
                    b.HasOne("Sixoclock.Onyx.SegmentService", "SegmentService")
                        .WithMany("SegmentServicePriceParameters")
                        .HasForeignKey("SegmentServiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.ServicePriceParameter", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Service", "Service")
                        .WithMany("ServicePriceParameters")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.Tag", b =>
                {
                    b.HasOne("Sixoclock.Onyx.AuthorizationStatus", "AuthorizationStatus")
                        .WithMany("Tags")
                        .HasForeignKey("AuthorizationStatusId");

                    b.HasOne("Sixoclock.Onyx.ParentTag", "ParentTag")
                        .WithMany("Tags")
                        .HasForeignKey("ParentTagId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.TagStatus", "TagStatus")
                        .WithMany("Tags")
                        .HasForeignKey("TagStatusId");

                    b.HasOne("Sixoclock.Onyx.Authorization.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Sixoclock.Onyx.TagTransaction", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Tag", "Tag")
                        .WithMany("TagTransactions")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.TagTransactionType", "TagTransactionType")
                        .WithMany("TagTransactions")
                        .HasForeignKey("TagTransactionTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.Transaction", "Transaction")
                        .WithMany("TagTransactions")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sixoclock.Onyx.Transaction", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Currency", "Currency")
                        .WithMany("Transactions")
                        .HasForeignKey("CurrencyId");

                    b.HasOne("Sixoclock.Onyx.EVSE", "EVSE")
                        .WithMany("Transactions")
                        .HasForeignKey("EVSEId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.Reason", "Reason")
                        .WithMany("Transactions")
                        .HasForeignKey("ReasonId");

                    b.HasOne("Sixoclock.Onyx.TransactionStatus", "TransactionStatus")
                        .WithMany("Transactions")
                        .HasForeignKey("TransactionStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.TransactionType", "TransactionType")
                        .WithMany("Transactions")
                        .HasForeignKey("TransactionTypeId");
                });

            modelBuilder.Entity("Sixoclock.Onyx.UnlockEvent", b =>
                {
                    b.HasOne("Sixoclock.Onyx.EVSE", "EVSE")
                        .WithMany()
                        .HasForeignKey("EVSEId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sixoclock.Onyx.OCPPMessageEvent", "OcppMessageEvent")
                        .WithMany()
                        .HasForeignKey("OcppMessageEventId");

                    b.HasOne("Sixoclock.Onyx.UnlockStatus", "UnlockStatus")
                        .WithMany("UnlockEvents")
                        .HasForeignKey("UnlockStatusId");
                });

            modelBuilder.Entity("Sixoclock.Onyx.VendorErrorCode", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Vendor", "Vendor")
                        .WithMany("VendorErrorCodes")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Abp.Application.Features.EditionFeatureSetting", b =>
                {
                    b.HasOne("Abp.Application.Editions.Edition", "Edition")
                        .WithMany()
                        .HasForeignKey("EditionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Abp.Authorization.Roles.RolePermissionSetting", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Authorization.Roles.Role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Abp.Authorization.Users.UserPermissionSetting", b =>
                {
                    b.HasOne("Sixoclock.Onyx.Authorization.Users.User")
                        .WithMany("Permissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
